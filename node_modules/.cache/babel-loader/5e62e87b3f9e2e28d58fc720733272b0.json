{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\posts-app\\\\src\\\\Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Container, Row, Table } from \"react-bootstrap\";\nimport SinglePost from \"./components/SinglePost\";\nimport Form from \"./components/Form\";\n\nfunction Posts() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(results => {\n      setIsLoaded(true);\n      setPosts(results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  function handleDelete(id) {\n    const newPosts = posts.filter(post => post.id !== id);\n    setPosts(newPosts);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n\n  if (!isLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"LOADING\");\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"POSTS APP\"), /*#__PURE__*/React.createElement(Form, {\n    initialValues: {\n      userId: 1,\n      title: \"\",\n      body: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"User Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Post Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(SinglePost, {\n    key: post.id,\n    post: post,\n    handleDelete: handleDelete,\n    initialValues: {\n      userId: post.userId,\n      title: post.title,\n      body: post.body\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Posts;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/posts-app/src/Posts.js"],"names":["React","useState","useEffect","Container","Row","Table","SinglePost","Form","Posts","error","setError","isLoaded","setIsLoaded","posts","setPosts","fetch","then","res","json","results","handleDelete","id","newPosts","filter","post","message","userId","title","body","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Container, Row, Table } from \"react-bootstrap\";\r\nimport SinglePost from \"./components/SinglePost\";\r\nimport Form from \"./components/Form\";\r\n\r\nfunction Posts() {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (results) => {\r\n          setIsLoaded(true);\r\n          setPosts(results);\r\n        },\r\n\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  function handleDelete(id) {\r\n    const newPosts = posts.filter((post) => post.id !== id);\r\n    setPosts(newPosts);\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n  if (!isLoaded) {\r\n    return <div>LOADING</div>;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <div>POSTS APP</div>\r\n        <Form\r\n          initialValues={{\r\n            userId: 1,\r\n            title: \"\",\r\n            body: \"\",\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>User Id</th>\r\n              <th>Post Id</th>\r\n              <th>Title</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {posts.map((post) => (\r\n              <SinglePost\r\n                key={post.id}\r\n                post={post}\r\n                handleDelete={handleDelete}\r\n                initialValues={{\r\n                  userId: post.userId,\r\n                  title: post.title,\r\n                  body: post.body,\r\n                }}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}