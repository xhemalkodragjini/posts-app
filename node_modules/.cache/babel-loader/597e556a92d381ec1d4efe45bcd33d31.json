{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\posts-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(results => {\n      setIsLoaded(true);\n      setPosts(results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    }, \"Error: \", error.message);\n  }\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/posts-app/src/App.js"],"names":["React","useState","useEffect","App","error","setError","isLoaded","setIsLoaded","posts","setPosts","fetch","then","res","json","results","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,OAAD,IAAa;AACXP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,OAAD,CAAR;AACD,KANL,EAQKV,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXL;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACW,OAAnB,CAAP;AACD;AACF;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then(\n        (results) => {\n          setIsLoaded(true);\n          setPosts(results);\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}