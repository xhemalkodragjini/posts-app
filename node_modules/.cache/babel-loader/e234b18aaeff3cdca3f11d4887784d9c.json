{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\posts-app\\\\src\\\\PostsPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Posts from \"./Posts\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nexport default function PostsPage() {\n  const [error, setError] = useState(null);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(5);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchTimeout, setSearchTimeout] = useState(null);\n  useEffect(() => {\n    getPosts();\n  }, []);\n  useEffect(() => {\n    getPosts();\n  }, [currentPage]);\n\n  function getPosts(itemsPerPage = postsPerPage, qParam) {\n    let queryUrlParam;\n\n    if (qParam) {\n      queryUrlParam = `&q=${qParam}`;\n    } else {\n      queryUrlParam = searchQuery ? `&q=${searchQuery}` : \"\";\n    }\n\n    fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${itemsPerPage}&_page=${currentPage}${queryUrlParam}`).then(res => res.json()).then(results => {\n      setPosts(results);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => setLoadingPosts(false));\n  }\n\n  function isDeletingPost(id, loadingDel) {\n    const newPosts = posts.map(p => ({ ...p\n    }));\n    const index = posts.findIndex(post => post.id === id);\n    newPosts[index].isLoadingDelete = loadingDel;\n    return newPosts;\n  }\n\n  function handleDelete(id) {\n    setPosts(isDeletingPost(id, true));\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      getPosts();\n    }).catch(err => {\n      setPosts(isDeletingPost(id, false));\n    });\n  }\n\n  function goToPreviousPage() {\n    if (currentPage === 1) {\n      return;\n    }\n\n    setCurrentPage(currentPage - 1);\n  }\n\n  function goToNextPage() {\n    if (currentPage === Math.ceil(100 / postsPerPage)) {\n      return;\n    }\n\n    setCurrentPage(currentPage + 1);\n  }\n\n  function handlePostsPerPageChange(e) {\n    setPostsPerPage(e.target.value);\n\n    if (currentPage === 1) {\n      return getPosts(e.target.value);\n    }\n\n    setCurrentPage(1);\n  }\n\n  function searchPosts(e) {\n    // vleren e inputit te search mbaje ne state\n    // page number 1, items per page si eshte,\n    // query posts\n    let value = e.target.value;\n    console.log(value);\n    setSearchQuery(value);\n\n    if (searchTimeout) {\n      clearTimeout(searchTimeout);\n      let timeout = setTimeout(() => {\n        getPosts(postsPerPage, value);\n      }, 500);\n      setSearchTimeout(timeout);\n    } else {\n      let timeout = setTimeout(() => {\n        getPosts(postsPerPage, value);\n      }, 500);\n      setSearchTimeout(timeout);\n    }\n\n    setCurrentPage(1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"My POSTS API\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input w-50 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Search a keyword\",\n    value: searchQuery,\n    onChange: searchPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Posts, {\n    error: error,\n    setError: setError,\n    loadingPosts: loadingPosts,\n    setLoadingPosts: setLoadingPosts,\n    posts: posts,\n    setPosts: setPosts,\n    getPosts: getPosts,\n    isDeletingPost: isDeletingPost,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: currentPage === 1,\n    className: \"mr-4\",\n    onClick: goToPreviousPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n    disabled: currentPage === Math.ceil(100 / postsPerPage),\n    onClick: goToNextPage,\n    className: \"mr-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handlePostsPerPageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 25,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"50\"))));\n}","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/posts-app/src/PostsPage.jsx"],"names":["React","useState","useEffect","Posts","Button","Container","Form","PostsPage","error","setError","loadingPosts","setLoadingPosts","posts","setPosts","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","searchQuery","setSearchQuery","searchTimeout","setSearchTimeout","getPosts","itemsPerPage","qParam","queryUrlParam","fetch","then","res","json","results","catch","finally","isDeletingPost","id","loadingDel","newPosts","map","p","index","findIndex","post","isLoadingDelete","handleDelete","method","err","goToPreviousPage","goToNextPage","Math","ceil","handlePostsPerPageChange","e","target","value","searchPosts","console","log","clearTimeout","timeout","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Posts from \"./Posts\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nexport default function PostsPage() {\r\n  const [error, setError] = useState(null);\r\n  const [loadingPosts, setLoadingPosts] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(5);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchTimeout, setSearchTimeout] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [currentPage]);\r\n\r\n  function getPosts(itemsPerPage = postsPerPage, qParam) {\r\n    let queryUrlParam;\r\n    if (qParam) {\r\n      queryUrlParam = `&q=${qParam}`;\r\n    } else {\r\n      queryUrlParam = searchQuery ? `&q=${searchQuery}` : \"\";\r\n    }\r\n\r\n    fetch(\r\n      `https://jsonplaceholder.typicode.com/posts?_limit=${itemsPerPage}&_page=${currentPage}${queryUrlParam}`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((results) => {\r\n        setPosts(results);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => setLoadingPosts(false));\r\n  }\r\n\r\n  function isDeletingPost(id, loadingDel) {\r\n    const newPosts = posts.map((p) => ({ ...p }));\r\n    const index = posts.findIndex((post) => post.id === id);\r\n    newPosts[index].isLoadingDelete = loadingDel;\r\n    return newPosts;\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    setPosts(isDeletingPost(id, true));\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then(() => {\r\n        getPosts();\r\n      })\r\n      .catch((err) => {\r\n        setPosts(isDeletingPost(id, false));\r\n      });\r\n  }\r\n\r\n  function goToPreviousPage() {\r\n    if (currentPage === 1) {\r\n      return;\r\n    }\r\n    setCurrentPage(currentPage - 1);\r\n  }\r\n\r\n  function goToNextPage() {\r\n    if (currentPage === Math.ceil(100 / postsPerPage)) {\r\n      return;\r\n    }\r\n    setCurrentPage(currentPage + 1);\r\n  }\r\n\r\n  function handlePostsPerPageChange(e) {\r\n    setPostsPerPage(e.target.value);\r\n    if (currentPage === 1) {\r\n      return getPosts(e.target.value);\r\n    }\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function searchPosts(e) {\r\n    // vleren e inputit te search mbaje ne state\r\n    // page number 1, items per page si eshte,\r\n    // query posts\r\n    let value = e.target.value;\r\n    console.log(value);\r\n    setSearchQuery(value);\r\n    if (searchTimeout) {\r\n      clearTimeout(searchTimeout);\r\n      let timeout = setTimeout(() => {\r\n        getPosts(postsPerPage, value);\r\n      }, 500);\r\n      setSearchTimeout(timeout);\r\n    } else {\r\n      let timeout = setTimeout(() => {\r\n        getPosts(postsPerPage, value);\r\n      }, 500);\r\n      setSearchTimeout(timeout);\r\n    }\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <h3>My POSTS API</h3>\r\n        <div className=\"search-input w-50 p-3\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Search a keyword\"\r\n            value={searchQuery}\r\n            onChange={searchPosts}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <Posts\r\n        error={error}\r\n        setError={setError}\r\n        loadingPosts={loadingPosts}\r\n        setLoadingPosts={setLoadingPosts}\r\n        posts={posts}\r\n        setPosts={setPosts}\r\n        getPosts={getPosts}\r\n        isDeletingPost={isDeletingPost}\r\n        handleDelete={handleDelete}\r\n      />\r\n      <Container>\r\n        <Button\r\n          disabled={currentPage === 1}\r\n          className=\"mr-4\"\r\n          onClick={goToPreviousPage}\r\n        >\r\n          Previous\r\n        </Button>\r\n        <Button\r\n          disabled={currentPage === Math.ceil(100 / postsPerPage)}\r\n          onClick={goToNextPage}\r\n          className=\"mr-4\"\r\n        >\r\n          Next\r\n        </Button>\r\n\r\n        <select onChange={handlePostsPerPageChange}>\r\n          <option value={5}>5</option>\r\n          <option value={10}>10</option>\r\n          <option value={25}>25</option>\r\n          <option value={50}>50</option>\r\n        </select>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}