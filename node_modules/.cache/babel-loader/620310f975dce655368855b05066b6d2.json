{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\posts-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Posts from \"./Posts\";\nimport SinglePost from \"./components/SinglePost\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  function handleCreation(data) {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: data.title,\n        body: data.body,\n        userId: data.userId\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  }\n\n  function getPosts() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(results => {\n      setPosts(results);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => setLoadingPosts(false));\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    error: error,\n    setError: setError,\n    loadingPosts: loadingPosts,\n    setLoadingPosts: setLoadingPosts,\n    posts: posts,\n    setPosts: setPosts,\n    getPosts: getPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    initialValues: {\n      userId: \"\",\n      title: \"\",\n      body: \"\"\n    },\n    handleSubmit: handleCreation,\n    status: \"create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/details/:id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SinglePost, {\n    key: post.id,\n    post: post,\n    handleDelete: handleDelete,\n    initialValues: {\n      userId: post.userId,\n      title: post.title,\n      body: post.body\n    },\n    status: \"edit\",\n    isLoadingDelete: post.isLoadingDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/posts-app/src/App.js"],"names":["React","useState","useEffect","Form","BrowserRouter","Router","Switch","Route","Posts","SinglePost","App","error","setError","loadingPosts","setLoadingPosts","posts","setPosts","handleCreation","data","fetch","method","body","JSON","stringify","title","userId","headers","getPosts","then","res","json","results","catch","finally","post","id","handleDelete","isLoadingDelete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Posts from \"./Posts\";\nimport SinglePost from \"./components/SinglePost\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const [posts, setPosts] = useState([]);\n\n  function handleCreation(data) {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: data.title,\n        body: data.body,\n        userId: data.userId,\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\",\n      },\n    });\n  }\n\n  function getPosts() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then((results) => {\n        setPosts(results);\n      })\n      .catch((error) => {\n        setError(error);\n      })\n      .finally(() => setLoadingPosts(false));\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Posts\n            error={error}\n            setError={setError}\n            loadingPosts={loadingPosts}\n            setLoadingPosts={setLoadingPosts}\n            posts={posts}\n            setPosts={setPosts}\n            getPosts={getPosts}\n          />\n        </Route>\n        <Route exact path=\"/create\">\n          <Form\n            initialValues={{\n              userId: \"\",\n              title: \"\",\n              body: \"\",\n            }}\n            handleSubmit={handleCreation}\n            status=\"create\"\n          />\n        </Route>\n        <Route exact path=\"/details/:id\">\n          <SinglePost\n            key={post.id}\n            post={post}\n            handleDelete={handleDelete}\n            initialValues={{\n              userId: post.userId,\n              title: post.title,\n              body: post.body,\n            }}\n            status=\"edit\"\n            isLoadingDelete={post.isLoadingDelete}\n          />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}