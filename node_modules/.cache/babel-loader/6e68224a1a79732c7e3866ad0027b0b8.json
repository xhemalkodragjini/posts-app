{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kodragjini\\\\Documents\\\\React\\\\posts-app\\\\src\\\\components\\\\SinglePost.js\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { Container, Button } from \"react-bootstrap\";\nimport \"./SinglePost.css\";\nimport PostForm from \"./PostForm\";\nexport default function SinglePost() {\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [error, setError] = useState();\n  const [editing, setEditing] = useState(false);\n  const history = useHistory(); //loaders\n  //success, post n state\n\n  useLayoutEffect(() => {\n    setLoading(true);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`).then(response => response.json()).then(json => setPost(json)).catch(err => {\n      setLoading(false);\n      setError(err);\n    }).finally(() => setLoading(false));\n  }, []);\n\n  function handleEdit() {\n    setEditing(true);\n  }\n\n  function handleSubmitEdit(post) {\n    setFormLoading(true);\n    fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        id: post.id,\n        title: post.title,\n        body: post.body,\n        userId: post.userId\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(json => setPost(json)).catch(err => setError(err)).finally(() => setFormLoading(false));\n  }\n\n  function handleCancel() {\n    history.goBack();\n    setEditing(false);\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, error.message);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 12\n      }\n    }, \"LOADING...\");\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"container-details text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, editing ? /*#__PURE__*/React.createElement(PostForm, {\n    handleSubmit: handleSubmitEdit,\n    isLoading: formLoading,\n    initialValues: {\n      id: post.id,\n      userId: post.userId,\n      title: post.title,\n      body: post.body\n    },\n    status: \"edit\",\n    handleCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mt-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"post-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"TITLE: \", post.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"USER ID: \", post.userId), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"post-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, post.body), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Edit\")));\n}","map":{"version":3,"sources":["C:/Users/Kodragjini/Documents/React/posts-app/src/components/SinglePost.js"],"names":["React","useLayoutEffect","useState","useParams","Link","useHistory","Container","Button","PostForm","SinglePost","id","post","setPost","loading","setLoading","formLoading","setFormLoading","error","setError","editing","setEditing","history","fetch","then","response","json","catch","err","finally","handleEdit","handleSubmitEdit","method","body","JSON","stringify","title","userId","headers","handleCancel","goBack","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,iBAAlC;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,EAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMmB,OAAO,GAAGhB,UAAU,EAA1B,CATmC,CAUnC;AACA;;AACAJ,EAAAA,eAAe,CAAC,MAAM;AACpBa,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAQ,IAAAA,KAAK,CAAE,8CAA6CZ,EAAG,EAAlD,CAAL,CACGa,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESE,IAAD,IAAUb,OAAO,CAACa,IAAD,CAFzB,EAGGC,KAHH,CAGUC,GAAD,IAAS;AACdb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,QAAQ,CAACS,GAAD,CAAR;AACD,KANH,EAOGC,OAPH,CAOW,MAAMd,UAAU,CAAC,KAAD,CAP3B;AAQD,GAVc,EAUZ,EAVY,CAAf;;AAYA,WAASe,UAAT,GAAsB;AACpBT,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,WAASU,gBAAT,CAA0BnB,IAA1B,EAAgC;AAC9BK,IAAAA,cAAc,CAAC,IAAD,CAAd;AAEAM,IAAAA,KAAK,CAAE,8CAA6CX,IAAI,CAACD,EAAG,EAAvD,EAA0D;AAC7DqB,MAAAA,MAAM,EAAE,KADqD;AAE7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBxB,QAAAA,EAAE,EAAEC,IAAI,CAACD,EADU;AAEnByB,QAAAA,KAAK,EAAExB,IAAI,CAACwB,KAFO;AAGnBH,QAAAA,IAAI,EAAErB,IAAI,CAACqB,IAHQ;AAInBI,QAAAA,MAAM,EAAEzB,IAAI,CAACyB;AAJM,OAAf,CAFuD;AAQ7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AARoD,KAA1D,CAAL,CAYGd,IAZH,CAYSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAZtB,EAaGF,IAbH,CAaSE,IAAD,IAAUb,OAAO,CAACa,IAAD,CAbzB,EAcGC,KAdH,CAcUC,GAAD,IAAST,QAAQ,CAACS,GAAD,CAd1B,EAeGC,OAfH,CAeW,MAAMZ,cAAc,CAAC,KAAD,CAf/B;AAgBD;;AAED,WAASsB,YAAT,GAAwB;AACtBjB,IAAAA,OAAO,CAACkB,MAAR;AACAnB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,MAAIH,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,KAAK,CAACuB,OAAZ,CAAP;AACD;;AACD,MAAI3B,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,OAAO,gBACN,oBAAC,QAAD;AACE,IAAA,YAAY,EAAEW,gBADhB;AAEE,IAAA,SAAS,EAAEf,WAFb;AAGE,IAAA,aAAa,EAAE;AACbL,MAAAA,EAAE,EAAEC,IAAI,CAACD,EADI;AAEb0B,MAAAA,MAAM,EAAEzB,IAAI,CAACyB,MAFA;AAGbD,MAAAA,KAAK,EAAExB,IAAI,CAACwB,KAHC;AAIbH,MAAAA,IAAI,EAAErB,IAAI,CAACqB;AAJE,KAHjB;AASE,IAAA,MAAM,EAAC,MATT;AAUE,IAAA,YAAY,EAAEM,YAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAcN,uDACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmC3B,IAAI,CAACwB,KAAxC,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcxB,IAAI,CAACyB,MAAnB,CAHF,eAIE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BzB,IAAI,CAACqB,IAAhC,CAJF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CAfJ,CADF;AA0BD","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport \"./SinglePost.css\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nexport default function SinglePost() {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n\r\n  const [error, setError] = useState();\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const history = useHistory();\r\n  //loaders\r\n  //success, post n state\r\n  useLayoutEffect(() => {\r\n    setLoading(true);\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n      .then((response) => response.json())\r\n      .then((json) => setPost(json))\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(err);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  function handleEdit() {\r\n    setEditing(true);\r\n  }\r\n\r\n  function handleSubmitEdit(post) {\r\n    setFormLoading(true);\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/posts/${post.id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id: post.id,\r\n        title: post.title,\r\n        body: post.body,\r\n        userId: post.userId,\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => setPost(json))\r\n      .catch((err) => setError(err))\r\n      .finally(() => setFormLoading(false));\r\n  }\r\n\r\n  function handleCancel() {\r\n    history.goBack();\r\n    setEditing(false);\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error.message}</div>;\r\n  }\r\n  if (loading) {\r\n    return <div>LOADING...</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"container-details text-center\">\r\n      {editing ? (\r\n        <PostForm\r\n          handleSubmit={handleSubmitEdit}\r\n          isLoading={formLoading}\r\n          initialValues={{\r\n            id: post.id,\r\n            userId: post.userId,\r\n            title: post.title,\r\n            body: post.body,\r\n          }}\r\n          status=\"edit\"\r\n          handleCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <>\r\n          <h1 className=\"mt-4 mb-5\">Details</h1>\r\n          <h3 className=\"post-title\">TITLE: {post.title}</h3>\r\n          <h3>USER ID: {post.userId}</h3>\r\n          <h3 className=\"post-body\">{post.body}</h3>\r\n          <Button onClick={handleEdit}>Edit</Button>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}